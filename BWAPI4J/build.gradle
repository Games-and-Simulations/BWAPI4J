group 'org.openbw.bwapi4j'
version ''

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'org.openbw.bwapi4j.BW'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
  }
}

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs 'lib'
    }
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile group: 'org.json', name: 'json', version: '20171018'

    testCompile 'junit:junit:4.12'
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
    }
}

shadowJar {
	from sourceSets.main.allSource
	classifier = null
}

task generateJniHeaders(type:Exec) {
    def classpath = sourceSets.main.output.classesDir
    def nativeIncludes = "src/native/include"
    commandLine "javah", "-jni", "-verbose", "-d", nativeIncludes, "-classpath", classpath, "$mainClassName", "bwta.BWTA", "bwta.Polygon", "bwta.BaseLocation", "org.openbw.bwapi4j.BWMapImpl", "org.openbw.bwapi4j.InteractionHandler", "org.openbw.bwapi4j.MapDrawer", "org.openbw.bwapi4j.DamageEvaluator", "org.openbw.bwapi4j.unit.Unit"

    dependsOn classes
}
